---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getVirtualFs, type FsNode } from "../lib/virtualFs.ts";

export const prerender = true;

export async function getStaticPaths() {
  const virtualFs = getVirtualFs();
  const paths: { params: { slug: string }; props?: Record<string, any> }[] = [];

  function traverse(node: FsNode, currentPath: string) {
    if (node.type === 'file') {
      // Remove leading slash and extension for the slug
      // Ensure currentPath ends with a slash if it's not the root, and node.name doesn't start with one.
      let fullPath = currentPath;
      if (currentPath.endsWith('/') && node.name.startsWith('/')) {
        fullPath = currentPath + node.name.substring(1);
      } else if (!currentPath.endsWith('/') && !node.name.startsWith('/')) {
        fullPath = currentPath + '/' + node.name;
      } else {
        fullPath = currentPath + node.name;
      }
      
      const slug = fullPath.substring(1).replace(/\.[^/.]+$/, "");
      paths.push({ params: { slug } });
    } else if (node.children) {
      for (const childName in node.children) {
        // Ensure the path passed to recursion correctly forms the next segment
        let nextPathSegment = currentPath;
        if (nextPathSegment === '/') nextPathSegment = ''; // Avoid double slash at root
        traverse(node.children[childName], nextPathSegment + node.name + '/');
      }
    }
  }

  // Start traversal from the root. The root's name is '/', so pass an empty string for currentPath initially,
  // or adjust logic in traverse to handle the root node's path construction.
  // The FsNode path property is already the full path, let's use that to simplify.

  function traverseUsingNodePath(node: FsNode) {
    if (node.type === 'file') {
      // node.path is the full path like /foo/bar.md
      // slug should be foo/bar
      const slug = node.path.substring(1).replace(/\.[^/.]+$/, "");
      if (slug) { // Ensure slug is not empty (e.g. if a file is at the root and named like '.md')
        paths.push({ params: { slug } });
      }
    } else if (node.children) {
      for (const childName in node.children) {
        traverseUsingNodePath(node.children[childName]);
      }
    }
  }

  traverseUsingNodePath(virtualFs);
  return paths;
}

const { slug } = Astro.params;
// TODO: Fetch content for the slug. For now, BaseLayout is enough for routing test.
// You would typically use the slug to find the correct FsNode and then load its content.
// e.g., const fileNode = getNode(`/${slug}.md`); // Assuming .md, adjust as needed
// if (fileNode) { /* load content */ }
---

<BaseLayout />
